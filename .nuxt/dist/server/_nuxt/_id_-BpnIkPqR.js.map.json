{"file":"_id_-BpnIkPqR.js","mappings":"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","names":["_a","_withAsyncContext","_ssrInterpolate","_unref","_ssrRenderList"],"sources":["../../../../node_modules/nuxt/dist/app/components/server-placeholder.js","../../../../node_modules/nuxt/dist/app/components/client-only.js","../../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../../pages/verformulario/[id].vue"],"sourcesContent":["import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","import { cloneVNode, createElementBlock, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport ServerPlaceholder from \"./server-placeholder.js\";\nimport { elToStaticVNode } from \"./utils.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nconst STATIC_DIV = \"<div></div>\";\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  setup(props, { slots, attrs }) {\n    const mounted = shallowRef(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    const vm = getCurrentInstance();\n    if (vm) {\n      vm._nuxtClientOnly = true;\n    }\n    provide(clientOnlySymbol, true);\n    return () => {\n      if (mounted.value) {\n        const vnodes = slots.default?.();\n        if (vnodes && vnodes.length === 1) {\n          return [cloneVNode(vnodes[0], attrs)];\n        }\n        return vnodes;\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return h(slot);\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (import.meta.server) {\n    return ServerPlaceholder;\n  }\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if ($setup.mounted$ ?? ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      }\n      return elToStaticVNode(ctx._.vnode.el, STATIC_DIV);\n    };\n  } else {\n    clone.template &&= `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else>${STATIC_DIV}</template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = shallowRef(nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 ||= {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (mounted$.value || !nuxtApp.isHydrating) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            const res = setupState(...args);\n            const attrs = clone.inheritAttrs !== false ? ctx.attrs : void 0;\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res, attrs) : h(res, attrs);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, toValue, unref, watch } from \"vue\";\nimport { captureStackTrace } from \"errx\";\nimport { debounce } from \"perfect-debounce\";\nimport { hash } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nimport { clientOnlySymbol } from \"../components/client-only.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults, granularCachedData, pendingWhenIdle, purgeCachedData, resetAsyncDataToUndefined } from \"#build/nuxt.config.mjs\";\nconst isDefer = (dedupe) => dedupe === \"defer\" || dedupe === false;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  let [_key, _handler, options = {}] = args;\n  const key = computed(() => toValue(_key));\n  if (typeof key.value !== \"string\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] key must be a string.\");\n  }\n  if (typeof _handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] handler must be a function.\");\n  }\n  const nuxtApp = useNuxtApp();\n  options.server ??= true;\n  options.default ??= getDefault;\n  options.getCachedData ??= getDefaultCachedData;\n  options.lazy ??= false;\n  options.immediate ??= true;\n  options.deep ??= asyncDataDefaults.deep;\n  options.dedupe ??= \"cancel\";\n  const functionName = options._functionName || \"useAsyncData\";\n  if (import.meta.dev && typeof options.dedupe === \"boolean\") {\n    console.warn(`[nuxt] \\`boolean\\` values are deprecated for the \\`dedupe\\` option of \\`${functionName}\\` and will be removed in the future. Use 'cancel' or 'defer' instead.`);\n  }\n  const currentData = nuxtApp._asyncData[key.value];\n  if (isDev && currentData) {\n    const warnings = [];\n    const values = createHash(_handler, options);\n    if (values.handler !== currentData._hash?.handler) {\n      warnings.push(`different handler`);\n    }\n    for (const opt of [\"transform\", \"pick\", \"getCachedData\"]) {\n      if (values[opt] !== currentData._hash[opt]) {\n        warnings.push(`different \\`${opt}\\` option`);\n      }\n    }\n    if (currentData._default.toString() !== options.default.toString()) {\n      warnings.push(`different \\`default\\` value`);\n    }\n    if (options.deep && isShallow(currentData.data)) {\n      warnings.push(`mismatching \\`deep\\` option`);\n    }\n    if (warnings.length) {\n      const distURL = import.meta.url.replace(/\\/app\\/.*$/, \"/app\");\n      const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};\n      const explanation = source ? ` (used at ${source.replace(/^file:\\/\\//, \"\")}:${line}:${column})` : \"\";\n      console.warn(`[nuxt] [${functionName}] Incompatible options detected for \"${key.value}\"${explanation}:\n${warnings.map((w) => `- ${w}`).join(\"\\n\")}\nYou can use a different key or move the call to a composable to ensure the options are shared across calls.`);\n    }\n  }\n  const initialFetchOptions = { cause: \"initial\", dedupe: options.dedupe };\n  if (!nuxtApp._asyncData[key.value]?._init) {\n    initialFetchOptions.cachedData = options.getCachedData(key.value, nuxtApp, { cause: \"initial\" });\n    nuxtApp._asyncData[key.value] = createAsyncData(nuxtApp, key.value, _handler, options, initialFetchOptions.cachedData);\n  }\n  const asyncData = nuxtApp._asyncData[key.value];\n  asyncData._deps++;\n  const initialFetch = () => nuxtApp._asyncData[key.value].execute(initialFetchOptions);\n  const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxtApp.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    let unregister = function(key2) {\n      const data = nuxtApp._asyncData[key2];\n      if (data?._deps) {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      }\n    };\n    const instance = getCurrentInstance();\n    if (instance && fetchOnServer && options.immediate && !instance.sp) {\n      instance.sp = [];\n    }\n    if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {\n      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);\n    }\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      onBeforeMount(() => {\n        cbs.forEach((cb) => {\n          cb();\n        });\n        cbs.splice(0, cbs.length);\n      });\n      onUnmounted(() => cbs.splice(0, cbs.length));\n    }\n    const isWithinClientOnly = instance && (instance._nuxtClientOnly || inject(clientOnlySymbol, false));\n    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || asyncData.data.value != null)) {\n      if (pendingWhenIdle) {\n        asyncData.pending.value = false;\n      }\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (!isWithinClientOnly && nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    const hasScope = getCurrentScope();\n    const unsubExecute = watch([key, ...options.watch || []], ([newKey], [oldKey]) => {\n      if ((newKey || oldKey) && newKey !== oldKey) {\n        const hasRun = nuxtApp._asyncData[oldKey]?.data.value !== asyncDataDefaults.value;\n        const isRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;\n        if (oldKey) {\n          unregister(oldKey);\n        }\n        const initialFetchOptions2 = { cause: \"initial\", dedupe: options.dedupe };\n        if (!nuxtApp._asyncData[newKey]?._init) {\n          initialFetchOptions2.cachedData = options.getCachedData(newKey, nuxtApp, { cause: \"initial\" });\n          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, initialFetchOptions2.cachedData);\n        }\n        nuxtApp._asyncData[newKey]._deps++;\n        if (options.immediate || hasRun || isRunning) {\n          nuxtApp._asyncData[newKey].execute(initialFetchOptions2);\n        }\n      } else {\n        asyncData._execute({ cause: \"watch\", dedupe: options.dedupe });\n      }\n    }, { flush: \"sync\" });\n    if (hasScope) {\n      onScopeDispose(() => {\n        unsubExecute();\n        unregister(key.value);\n      });\n    }\n  }\n  const asyncReturn = {\n    data: writableComputedRef(() => nuxtApp._asyncData[key.value]?.data),\n    pending: writableComputedRef(() => nuxtApp._asyncData[key.value]?.pending),\n    status: writableComputedRef(() => nuxtApp._asyncData[key.value]?.status),\n    error: writableComputedRef(() => nuxtApp._asyncData[key.value]?.error),\n    refresh: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),\n    execute: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),\n    clear: () => clearNuxtDataByKey(nuxtApp, key.value)\n  };\n  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key.value]).then(() => asyncReturn);\n  Object.assign(asyncDataPromise, asyncReturn);\n  return asyncDataPromise;\n}\nfunction writableComputedRef(getter) {\n  return computed({\n    get() {\n      return getter()?.value;\n    },\n    set(value) {\n      const ref2 = getter();\n      if (ref2) {\n        ref2.value = value;\n      }\n    }\n  });\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options = {}] = args;\n  if (import.meta.dev) {\n    options._functionName ||= \"useLazyAsyncData\";\n  }\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nfunction _isAutoKeyNeeded(keyOrFetcher, fetcher) {\n  if (typeof keyOrFetcher === \"string\") {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"object\" && keyOrFetcher !== null) {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"function\" && typeof fetcher === \"function\") {\n    return false;\n  }\n  return true;\n}\nexport function useNuxtData(key) {\n  const nuxtApp = useNuxtApp();\n  if (!(key in nuxtApp.payload.data)) {\n    nuxtApp.payload.data[key] = asyncDataDefaults.value;\n  }\n  if (nuxtApp._asyncData[key]) {\n    const data = nuxtApp._asyncData[key];\n    data._deps++;\n    if (getCurrentScope()) {\n      onScopeDispose(() => {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      });\n    }\n  }\n  return {\n    data: computed({\n      get() {\n        return nuxtApp._asyncData[key]?.data.value ?? nuxtApp.payload.data[key];\n      },\n      set(value) {\n        if (nuxtApp._asyncData[key]) {\n          nuxtApp._asyncData[key].data.value = value;\n        } else {\n          nuxtApp.payload.data[key] = value;\n        }\n      }\n    })\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? toArray(keys) : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const key of _keys) {\n    clearNuxtDataByKey(nuxtApp, key);\n  }\n}\nfunction clearNuxtDataByKey(nuxtApp, key) {\n  if (key in nuxtApp.payload.data) {\n    nuxtApp.payload.data[key] = void 0;\n  }\n  if (key in nuxtApp.payload._errors) {\n    nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;\n  }\n  if (nuxtApp._asyncData[key]) {\n    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : unref(nuxtApp._asyncData[key]._default());\n    nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;\n    if (pendingWhenIdle) {\n      nuxtApp._asyncData[key].pending.value = false;\n    }\n    nuxtApp._asyncData[key].status.value = \"idle\";\n  }\n  if (key in nuxtApp._asyncDataPromises) {\n    if (nuxtApp._asyncDataPromises[key]) {\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    nuxtApp._asyncDataPromises[key] = void 0;\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\nconst isDev = import.meta.dev;\nfunction createAsyncData(nuxtApp, key, _handler, options, initialCachedData) {\n  nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;\n  const hasCustomGetCachedData = options.getCachedData !== getDefaultCachedData;\n  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {\n    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);\n    if (value) {\n      return value;\n    }\n    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(() => _handler(nuxtApp)));\n    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);\n    return promise;\n  };\n  const _ref = options.deep ? ref : shallowRef;\n  const hasCachedData = initialCachedData != null;\n  const unsubRefreshAsyncData = nuxtApp.hook(\"app:data:refresh\", async (keys) => {\n    if (!keys || keys.includes(key)) {\n      await asyncData.execute({ cause: \"refresh:hook\" });\n    }\n  });\n  const asyncData = {\n    data: _ref(hasCachedData ? initialCachedData : options.default()),\n    pending: pendingWhenIdle ? shallowRef(!hasCachedData) : computed(() => asyncData.status.value === \"pending\"),\n    error: toRef(nuxtApp.payload._errors, key),\n    status: shallowRef(\"idle\"),\n    execute: (opts = {}) => {\n      if (nuxtApp._asyncDataPromises[key]) {\n        if (isDefer(opts.dedupe ?? options.dedupe)) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        nuxtApp._asyncDataPromises[key].cancelled = true;\n      }\n      if (granularCachedData || opts.cause === \"initial\" || nuxtApp.isHydrating) {\n        const cachedData = \"cachedData\" in opts ? opts.cachedData : options.getCachedData(key, nuxtApp, { cause: opts.cause ?? \"refresh:manual\" });\n        if (cachedData != null) {\n          nuxtApp.payload.data[key] = asyncData.data.value = cachedData;\n          asyncData.error.value = asyncDataDefaults.errorValue;\n          asyncData.status.value = \"success\";\n          return Promise.resolve(cachedData);\n        }\n      }\n      if (pendingWhenIdle) {\n        asyncData.pending.value = true;\n      }\n      asyncData.status.value = \"pending\";\n      const promise = new Promise(\n        (resolve, reject) => {\n          try {\n            resolve(handler(nuxtApp));\n          } catch (err) {\n            reject(err);\n          }\n        }\n      ).then(async (_result) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        let result = _result;\n        if (options.transform) {\n          result = await options.transform(_result);\n        }\n        if (options.pick) {\n          result = pick(result, options.pick);\n        }\n        if (import.meta.dev && import.meta.server && typeof result === \"undefined\") {\n          const stack = captureStackTrace();\n          const { source, line, column } = stack[stack.length - 1] ?? {};\n          const explanation = source ? ` (used at ${source.replace(/^file:\\/\\//, \"\")}:${line}:${column})` : \"\";\n          console.warn(`[nuxt] \\`${options._functionName || \"useAsyncData\"}${explanation}\\` must return a value (it should not be \\`undefined\\`) or the request may be duplicated on the client side.`);\n        }\n        nuxtApp.payload.data[key] = result;\n        asyncData.data.value = result;\n        asyncData.error.value = asyncDataDefaults.errorValue;\n        asyncData.status.value = \"success\";\n      }).catch((error) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        asyncData.error.value = createError(error);\n        asyncData.data.value = unref(options.default());\n        asyncData.status.value = \"error\";\n      }).finally(() => {\n        if (promise.cancelled) {\n          return;\n        }\n        if (pendingWhenIdle) {\n          asyncData.pending.value = false;\n        }\n        delete nuxtApp._asyncDataPromises[key];\n      });\n      nuxtApp._asyncDataPromises[key] = promise;\n      return nuxtApp._asyncDataPromises[key];\n    },\n    _execute: debounce((...args) => asyncData.execute(...args), 0, { leading: true }),\n    _default: options.default,\n    _deps: 0,\n    _init: true,\n    _hash: isDev ? createHash(_handler, options) : void 0,\n    _off: () => {\n      unsubRefreshAsyncData();\n      if (nuxtApp._asyncData[key]?._init) {\n        nuxtApp._asyncData[key]._init = false;\n      }\n      if (purgeCachedData && !hasCustomGetCachedData) {\n        nextTick(() => {\n          if (!nuxtApp._asyncData[key]?._init) {\n            clearNuxtDataByKey(nuxtApp, key);\n            asyncData.execute = () => Promise.resolve();\n            asyncData.data.value = asyncDataDefaults.value;\n          }\n        });\n      }\n    }\n  };\n  return asyncData;\n}\nconst getDefault = () => asyncDataDefaults.value;\nconst getDefaultCachedData = (key, nuxtApp, ctx) => {\n  if (nuxtApp.isHydrating) {\n    return nuxtApp.payload.data[key];\n  }\n  if (ctx.cause !== \"refresh:manual\" && ctx.cause !== \"refresh:hook\") {\n    return nuxtApp.static.data[key];\n  }\n};\nfunction createHash(_handler, options) {\n  return {\n    handler: hash(_handler),\n    transform: options.transform ? hash(options.transform) : void 0,\n    pick: options.pick ? hash(options.pick) : void 0,\n    getCachedData: options.getCachedData ? hash(options.getCachedData) : void 0\n  };\n}\n","<template>\r\n  <button\r\n    @click=\"$router.push('/historial')\"\r\n    class=\"bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded transition m-5\"\r\n  >\r\n    Volver al historial\r\n  </button>\r\n\r\n  <main\r\n    ref=\"contentToPrint\"\r\n    class=\"max-w-5xl mx-auto p-6 rounded-lg shadow-lg\"\r\n    :style=\"{ backgroundColor: '#1a202c', color: '#e2e8f0' }\"\r\n  >\r\n    <h1 class=\"text-3xl font-bold mb-4 text-gray-200\">{{ formulario?.name || 'Formulario' }}</h1>\r\n\r\n    <!-- Información general -->\r\n    <div class=\"bg-gray-800 border border-gray-700 rounded p-4 mb-6 text-sm text-gray-300\">\r\n      <p><strong>Empresa:</strong> {{ formulario?.companyName || '-' }}</p>\r\n      <p><strong>Atención a:</strong> {{ formulario?.attentionName || '-' }}</p>\r\n      <p><strong>Email:</strong> {{ formulario?.emailName || '-' }}</p>\r\n      <p><strong>Teléfono:</strong> {{ formulario?.contacName || '-' }}</p>\r\n      <p><strong>Fecha de creación:</strong> {{ formatDate(formulario?.createdAt) }}</p>\r\n    </div>\r\n\r\n\r\n    \r\n    \r\n\r\n    <div v-if=\"formulario\">\r\n      \r\n       <!-- Descripciones generales -->\r\n      <div v-if=\"formulario.descripcion || formulario.detalles\" class=\"bg-gray-800 border border-gray-700 rounded p-4 mb-4\">\r\n        <h2 class=\"text-lg font-semibold text-gray-100 mb-2\">Detalles del formulario</h2>\r\n        <p v-if=\"formulario.descripcion\" class=\"mb-2\"><strong>Descripción:</strong> {{ formulario.descripcion }}</p>\r\n        <p v-if=\"formulario.detalles\"><strong>Detalles de actividades:</strong> {{ formulario.detalles }}</p>\r\n      </div>\r\n\r\n      <!-- TextSections -->\r\n      <div v-if=\"formulario.textSections?.length\" class=\"bg-gray-800 border border-gray-700 rounded p-4 mb-4\">\r\n        <h2 class=\"text-lg font-semibold text-gray-100 mb-2\">Secciones Descriptivas</h2>\r\n        <div v-for=\"(text, index) in formulario.textSections\" :key=\"index\" class=\"mb-2\">\r\n          <p class=\"text-gray-300\">📌 {{ text.content }}</p>\r\n        </div>\r\n      </div>\r\n       <!-- Secciones de productos -->\r\n      <div v-for=\"(section, index) in formulario.sections\" :key=\"index\" class=\"border border-gray-700 rounded p-4 mb-6\">\r\n        <h2 class=\"text-xl font-semibold text-gray-100 mb-3\">{{ section.title || `ITEM ${index + 1}` }}</h2>\r\n        <table class=\"w-full text-left text-gray-300 mb-3\">\r\n          <thead>\r\n            <tr class=\"border-b border-gray-600\">\r\n              <th class=\"py-2\">Producto</th>\r\n              <th class=\"py-2\">Cantidad</th>\r\n              <th class=\"py-2\">Unidad</th>\r\n              <th class=\"py-2\">Valor Unitario</th>\r\n              <th class=\"py-2\">Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(field, idx) in section.fields\" :key=\"idx\" class=\"border-t border-gray-800\">\r\n              <td class=\"py-2\">{{ field.label }}</td>\r\n              <td class=\"py-2\">{{ field.quantity }}</td>\r\n              <td class=\"py-2\">{{ field.unit }}</td>\r\n              <td class=\"py-2\">$ {{ formatNumber(field.unitPrice) }}</td>\r\n              <td class=\"py-2\">$ {{ formatNumber(field.total) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-right font-semibold text-gray-200\">\r\n          Total sección: ${{ formatNumber(section.totalSection) }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total por sección -->\r\n      <div class=\"bg-gray-800 border border-gray-700 rounded p-4 mb-4\">\r\n        <h2 class=\"text-lg font-semibold text-gray-100 mb-3\">Total de servicio</h2>\r\n        <ul class=\"text-gray-300 space-y-1\">\r\n          <li v-for=\"(total, index) in formulario.totalPorSeccion\" :key=\"index\" class=\"flex justify-between\">\r\n            <span>{{ formulario.sections[index]?.title || `Sección ${index + 1}` }}</span>\r\n            <span>$ {{ formatNumber(total) }}</span>\r\n          </li>\r\n        </ul>\r\n        <div class=\"mt-2 text-right font-bold text-lg text-gray-100 border-t border-gray-600 pt-2\">\r\n          SUBTOTALES: ${{ formatNumber(formulario.totalGeneral) }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Resumen financiero -->\r\n      <div class=\"bg-gray-800 border border-gray-700 rounded p-4 mb-4\">\r\n        <h2 class=\"text-lg font-semibold text-gray-100 mb-3\">Resumen Financiero</h2>\r\n        <ul class=\"text-gray-300 space-y-1\">\r\n          <li class=\"flex justify-between\">\r\n            <span>Gastos SSO, adm y util {{ formulario.utilidadPorcentaje || 20 }}%</span>\r\n            <span>$ {{ formatNumber(formulario.resumenFinanciero?.gastosSSO) }}</span>\r\n          </li>\r\n          <li class=\"flex justify-between\"><span>Neto</span><span>$ {{ formatNumber(formulario.resumenFinanciero?.neto) }}</span></li>\r\n          <li class=\"flex justify-between\"><span>IVA (19%)</span><span>$ {{ formatNumber(formulario.resumenFinanciero?.iva) }}</span></li>\r\n          <li class=\"flex justify-between font-bold border-t border-gray-600 pt-2 text-gray-100\">\r\n            <span>TOTAL</span><span>$ {{ formatNumber(formulario.resumenFinanciero?.totalFinal) }}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n\r\n    <div v-else class=\"text-center text-gray-400\">Cargando información...</div>\r\n  </main>\r\n\r\n  <!-- Botón para exportar PDF -->\r\n  <div class=\"max-w-5xl mx-auto p-6 flex justify-end\">\r\n    <button\r\n      @click=\"exportPDF\"\r\n      class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded\"\r\n      :disabled=\"!formulario\"\r\n    >\r\n      Exportar a PDF\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\ndefinePageMeta({\r\n  ssr: false\r\n})\r\n\r\n\r\n\r\nimport { useRoute } from 'vue-router'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\nimport { db } from '~/firebase/firebase'\r\n\r\nimport jsPDF from 'jspdf'\r\nimport autoTable from 'jspdf-autotable'\r\n\r\nconst route = useRoute()\r\n\r\nfunction formatNumber(value) {\r\n  if (value == null || isNaN(value)) return '0'\r\n  return Number(value).toLocaleString('es-CL', { maximumFractionDigits: 0 })\r\n}\r\nfunction sanitizeFormulario(data) {\r\n  const toISO = (ts) => (ts?.toDate ? ts.toDate().toISOString() : ts ?? null)\r\n\r\n  return {\r\n    ...data,\r\n    // Mantener los nombres que estás usando en el formulario / DB\r\n    companyName: data.companyName ?? '',\r\n    attentionName: data.attentionName ?? '',\r\n    emailName: data.emailName ?? '',   // <-- usar el mismo nombre que guardas\r\n    contacName: data.contacName ?? '', // <-- idem (phone quedó guardado como contacName)\r\n    createdAt: toISO(data.createdAt),\r\n    descripcion: data.descripcion ?? '',\r\n    detalles: data.detalles ?? '',\r\n    textSections: data.textSections?.map(section => ({\r\n      content: section.content ?? ''\r\n    })) ?? [],\r\n    sections: data.sections?.map(section => ({\r\n      title: section.title ?? '',\r\n      totalSection: section.totalSection ?? 0,\r\n      fields: section.fields?.map(field => ({\r\n        label: field.label ?? '',\r\n        unit: field.unit ?? '',\r\n        unitPrice: field.unitPrice ?? 0,\r\n        quantity: field.quantity ?? 0,\r\n        total: field.total ?? 0\r\n      })) ?? []\r\n    })) ?? [],\r\n    totalPorSeccion: data.totalPorSeccion ?? [],\r\n    totalGeneral: data.totalGeneral ?? 0,\r\n    utilidadPorcentaje: data.utilidadPorcentaje ?? 20,  // <-- lo lees directo de data\r\n    resumenFinanciero: {\r\n      gastosSSO: data.resumenFinanciero?.gastosSSO ?? 0,\r\n      neto: data.resumenFinanciero?.neto ?? 0,\r\n      iva: data.resumenFinanciero?.iva ?? 0,\r\n      totalFinal: data.resumenFinanciero?.totalFinal ?? 0,\r\n      fechaPago: toISO(data.resumenFinanciero?.fechaPago)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function loadImageAsBase64(path) {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image()\r\n    img.crossOrigin = 'Anonymous'\r\n    img.src = path\r\n    img.onload = () => {\r\n      const canvas = document.createElement('canvas')\r\n      canvas.width = img.width\r\n      canvas.height = img.height\r\n      const ctx = canvas.getContext('2d')\r\n      ctx.drawImage(img, 0, 0)\r\n      resolve(canvas.toDataURL('image/png'))\r\n    }\r\n    img.onerror = reject\r\n  })\r\n}\r\n\r\n\r\nconst { data: formulario, error } = await useAsyncData(`formulario-${route.params.id}`, async () => {\r\n  const docRef = doc(db, 'formularios', route.params.id)\r\n  const docSnap = await getDoc(docRef)\r\n\r\n  if (!docSnap.exists()) {\r\n    throw createError({ statusCode: 404, statusMessage: 'Formulario no encontrado' })\r\n  }\r\n\r\n  const rawData = docSnap.data()\r\n  return sanitizeFormulario(rawData)\r\n})\r\n\r\n\r\n\r\n\r\nasync function exportPDF() {\r\n  const [{ jsPDF }, autoTable] = await Promise.all([\r\n    import('jspdf'),\r\n    import('jspdf-autotable').then(m => m.default || m)\r\n  ])\r\n\r\n  const doc = new jsPDF()\r\n  const marginLeft = 10\r\n  let currentY = 5\r\n\r\n  const logoBase64 = await loadImageAsBase64('/BitnetsLogo.jpg')\r\n\r\n\r\n// Título principal\r\ndoc.setFontSize(8)\r\ndoc.setFont('helvetica', 'bold')\r\ndoc.text('BITNETS SPA', marginLeft, currentY)\r\n\r\n// Logo a la derecha (usar imagen en Base64 o data:image/png;base64,...)\r\n// Ajusta las coordenadas y tamaño según tu logo\r\ndoc.addImage(logoBase64, 'PNG', 160, currentY - 1, 30, 10)\r\n\r\ncurrentY += 4\r\n\r\n// Subtítulo o detalles\r\ndoc.setFontSize(8)\r\ndoc.setFont('helvetica', 'normal')\r\ndoc.text(`Servicios Integrales en Tecnologia`, marginLeft, currentY)\r\ncurrentY += 3\r\ndoc.text(`RUT: 76.504.212-7`, marginLeft, currentY)\r\ncurrentY += 3\r\ndoc.text(`Caulin s/n - ANCUD`, marginLeft, currentY)\r\ncurrentY += 3\r\n\r\n// Línea divisoria\r\ndoc.setLineWidth(0.5)\r\ndoc.line(marginLeft, currentY, 190, currentY)\r\n\r\ncurrentY += 10\r\n\r\n  \r\n  // Título principal\r\n  doc.setFontSize(12)\r\n  doc.text(formulario.value.name || 'Formulario', marginLeft, currentY)\r\n  currentY += 10\r\n\r\n  // Datos generales\r\n    doc.setFontSize(8)\r\n\r\n    if (formulario.value.companyName) {\r\n      doc.text(`Empresa: ${formulario.value.companyName}`, marginLeft, currentY)\r\n      currentY += 3\r\n    }\r\n    if (formulario.value.attentionName) {\r\n      doc.text(`Atención: ${formulario.value.attentionName}`, marginLeft, currentY)\r\n      currentY += 3\r\n    }\r\n    if (formulario.value.emailName) {\r\n      doc.text(`Email: ${formulario.value.emailName}`, marginLeft, currentY)\r\n      currentY += 3\r\n    }\r\n    if (formulario.value.contacName) {\r\n      doc.text(`Teléfono: ${formulario.value.contacName}`, marginLeft, currentY)\r\n      currentY += 3\r\n    }\r\n    if (formulario.value.createdAt) {\r\n      const fecha = new Date(formulario.value.createdAt).toLocaleString('es-CL')\r\n      doc.text(`Fecha de creación: ${fecha}`, marginLeft, currentY)\r\n      currentY += 3\r\n    }\r\n\r\n\r\n    // Descripción\r\n   \r\n    if (formulario.value.textSections?.length) {\r\n      doc.setFontSize(8)\r\n      \r\n      currentY += 3\r\n\r\n      doc.setFontSize(8)\r\n\r\n      const pageHeight = doc.internal.pageSize.height\r\n      const maxWidth = 180\r\n      const lineHeight = 4.5\r\n      const padding = 1\r\n\r\n      formulario.value.textSections.forEach((section) => {\r\n        const text = section.content\r\n        const lines = doc.splitTextToSize(text, maxWidth)\r\n\r\n        lines.forEach((line) => {\r\n          if (currentY + lineHeight > pageHeight - padding) {\r\n            doc.addPage()\r\n            currentY = padding\r\n          }\r\n\r\n          doc.text(line, marginLeft, currentY)\r\n          currentY += lineHeight\r\n        })\r\n\r\n        currentY += 2 // Espacio extra entre secciones\r\n      })\r\n    }\r\n\r\n  // Secciones con productos\r\n  formulario.value.sections.forEach((section, i) => {\r\n    currentY += 4\r\n    doc.setFontSize(8)\r\n    doc.text(section.title || `ITEM ${i + 1}:`, marginLeft, currentY)\r\n\r\n    currentY += 3\r\n\r\n    const tableColumn = ['Cantidad', 'Unidad', 'Detalle', 'Valor Unitario', 'Total']\r\n    const tableRows = section.fields.map(field => [\r\n      field.quantity,\r\n      field.unit || '',\r\n      field.label,\r\n      formatCurrency(field.unitPrice),\r\n      formatCurrency(field.total)\r\n    ])\r\n\r\n\r\n    autoTable(doc, {\r\n  startY: currentY,\r\n  head: [tableColumn],\r\n  body: tableRows,\r\n  margin: { left: marginLeft },\r\n  theme: 'grid',\r\n  styles: { \r\n    fontSize: 8,\r\n    cellPadding: 0.5,\r\n    overflow: 'ellipsize',\r\n    cellWidth: 'wrap'\r\n  },\r\n  headStyles: { \r\n    fillColor: [30, 30, 30]\r\n  },\r\n  columnStyles: {\r\n    '*': { cellPadding: 0.5 },\r\n    0: { halign: 'right', cellWidth: 15 },  // Cantidad\r\n    1: { halign: 'right', cellWidth: 15 },  // Unidad\r\n    2: { halign: 'left' },                   // Detalle (sin ancho fijo)\r\n    3: { halign: 'right', cellWidth: 25 },  // Valor Unitario\r\n    4: { halign: 'right', cellWidth: 25 },  // Total\r\n  },\r\n  didParseCell: function (data) {\r\n    if (data.section === 'head') {\r\n      if (data.column.index === 2) {\r\n        data.cell.styles.halign = 'left' // Detalle sigue a la izquierda\r\n      } else {\r\n        data.cell.styles.halign = 'right' // Todas las demás columnas a la derecha\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\n    currentY = doc.lastAutoTable.finalY + 5\r\n     // TOTAL NETO alineado a la derecha sin salirse del margen\r\n    const rightMargin = 14 // margen desde el borde derecho\r\n    doc.setFontSize(8)\r\n    doc.text(\r\n      `Total ${section.title || `Sección ${i + 1}`}: ${formatCurrency(formulario.value.totalPorSeccion[i])}`,\r\n      doc.internal.pageSize.width - rightMargin,\r\n      currentY,\r\n      { align: 'right' }\r\n    )\r\n\r\n  })\r\n\r\n  currentY += 4\r\n  doc.setFontSize(10)\r\n  doc.text('SUBTOTALES', marginLeft, currentY)\r\n  currentY += 4\r\n\r\n  // Tabla Total de servicio\r\n    const totalServicioRows = formulario.value.totalPorSeccion.map((total, i) => [\r\n    formulario.value.sections[i]?.title || `Sección ${i + 1}`,\r\n    formatCurrency(total)\r\n  ])\r\n\r\n  autoTable(doc, {\r\n    startY: currentY,\r\n    head: [['Sección', 'Total']],\r\n    body: totalServicioRows,\r\n    margin: { left: marginLeft },\r\n    theme: 'grid',\r\n    styles: { \r\n      fontSize: 8,\r\n      cellPadding: 0.5,\r\n      overflow: 'ellipsize',\r\n      cellWidth: 'wrap'\r\n    },\r\n    headStyles: { fillColor: [50, 50, 50] },\r\n    columnStyles: {\r\n        \r\n        1: { halign: 'right', cellWidth: 30 }, // Unidad\r\n\r\n  }})\r\n  currentY = doc.lastAutoTable.finalY + 4\r\n\r\n     // TOTAL NETO alineado a la derecha sin salirse del margen\r\n    const rightMargin = 14 // margen desde el borde derecho\r\n    doc.setFontSize(8)\r\n    doc.text(\r\n      `SUBTOTALES: ${formatCurrency(formulario.value.totalGeneral)}`,\r\n      doc.internal.pageSize.width - rightMargin,\r\n      currentY,\r\n      { align: 'right' }\r\n    )\r\n\r\n\r\n  currentY += 5\r\n\r\n  // Resumen financiero como tabla\r\n  doc.setFontSize(10)\r\n  doc.text('Resumen Financiero', marginLeft, currentY)\r\n  currentY += 6\r\n\r\n  const rf = formulario.value.resumenFinanciero\r\n\r\n\r\n  const utilidad = Number(formulario.value.utilidadPorcentaje)\r\n\r\n\r\n  if (rf) {\r\n      const resumenRows = [\r\n    [`Gastos SSO, adm y util ${utilidad}%`, formatCurrency(rf.gastosSSO)],\r\n    ['Neto', formatCurrency(rf.neto)],\r\n    ['IVA (19%)', formatCurrency(rf.iva)],\r\n    ['TOTAL', formatCurrency(rf.totalFinal)]\r\n    ]\r\n\r\n    autoTable(doc, {\r\n      startY: currentY,\r\n      head: [['Totales', '']],\r\n      body: resumenRows,\r\n      margin: { left: marginLeft },\r\n      theme: 'grid',\r\n      styles: { \r\n        fontSize: 8,\r\n        cellPadding: 1,\r\n        overflow: 'ellipsize',\r\n        cellWidth: 'wrap'\r\n      },\r\n      headStyles: { fillColor: [50, 50, 50] },\r\n      columnStyles: {\r\n        0: { halign: 'right' }, // Unidad\r\n        1: { halign: 'right', cellWidth: 30 }, // Total\r\n    }})\r\n    currentY = doc.lastAutoTable.finalY + 7\r\n  }\r\n\r\n  \r\n\r\n  // Detalles\r\n  if (formulario.value.detalles) {\r\n    doc.setFontSize(10)\r\n    doc.text('Detalles de actividades:', marginLeft, currentY)\r\n    currentY += 8\r\n\r\n    doc.setFontSize(8)\r\n    const detallesLines = doc.splitTextToSize(formulario.value.detalles, 180)\r\n\r\n    if (currentY + detallesLines.length * 7 > doc.internal.pageSize.height - 20) {\r\n      doc.addPage()\r\n      currentY = 20\r\n    }\r\n\r\n    doc.text(detallesLines, marginLeft + 10, currentY)\r\n    currentY += detallesLines.length * 7 + 5\r\n  }\r\n\r\n      // Verificar si hay espacio suficiente para la firma, si no, crear nueva página\r\n    const signatureSpaceNeeded = 30\r\n    if (currentY + signatureSpaceNeeded > doc.internal.pageSize.height - 10) {\r\n      doc.addPage()\r\n      currentY = 25\r\n    }\r\n\r\n    // Línea de firma y etiqueta\r\n    const pageWidth = doc.internal.pageSize.getWidth()\r\n    const marginRight = 80\r\n    const text = 'BITNETS spa'\r\n    const textWidth = doc.getTextWidth(text)\r\n    const posX = pageWidth - marginRight - textWidth\r\n\r\n    doc.setFontSize(8)\r\n\r\n    // Línea de firma (por ejemplo, 60 unidades de ancho)\r\n    doc.line(posX, currentY + 12, posX + 60, currentY + 12)\r\n\r\n    // Texto debajo de la línea (4 unidades más abajo)\r\n    doc.text(text, posX+10, currentY + 16)\r\n\r\n\r\n\r\n \r\n\r\n    // === Pie de página ===\r\n    const pageHeight = doc.internal.pageSize.height\r\n    doc.setFontSize(7)\r\n    doc.setFont('helvetica', 'normal')\r\n    doc.setTextColor(100)\r\n    doc.text(\r\n      'Documento BITNETS SpA - Versión 1.0',\r\n      marginLeft,\r\n      pageHeight - 10\r\n    )\r\n    const numeroFormateado = `${String(doc.cotizacionId).padStart(5, \"0\")}${doc.version || \"01\"}`;\r\n    doc.text(\r\n  `Cotización: ${formulario.value.cotizacionId || '00000'}${formulario.value.version || '01'}`,\r\n  doc.internal.pageSize.width - marginRight,\r\n  pageHeight - 10,\r\n  { align: 'right' }\r\n)\r\n\r\n    currentY += 0\r\n\r\n    \r\n    \r\n\r\n  doc.save(`${formulario.value.name || 'formulario'}.pdf`)\r\n}\r\n\r\n// Función para formatear fechas\r\nfunction formatDate(isoString) {\r\n  if (!isoString) return 'Fecha no disponible'\r\n  const fecha = new Date(isoString)\r\n  return fecha.toLocaleDateString('es-CL', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  })\r\n}\r\n\r\nfunction formatCurrency(value) {\r\n  if (isNaN(value)) return value\r\n  return `$ ${Number(value).toLocaleString('es-CL')}`\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n"],"version":3}